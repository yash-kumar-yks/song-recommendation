# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BfG5gZSbR7Ou5PfSTk6ZdFflxlsvuMyi
"""

import keras
from keras.layers import Activation, Dense, Dropout, Conv2D, \
                         Flatten, MaxPooling2D
from keras.models import Sequential
import numpy as np
import pandas as pd
import random

# Read Data
data = pd.read_csv('music.csv')
data.loc[4353]

!pwd

data = data.drop(["artist.id", "artist.name", "artist_mbtags","location", "song.id","latitude", "key", "longitude", "release.id","release.name","similar", "title", "year"], axis=1)

data.shape

data=data.drop(["terms_freq", "time_signature", "time_signature_confidence"], axis=1)
data=data.dropna()
data.shape

data.head()

data=pd.get_dummies(data, columns=['terms'])
data.shape
Y=data[data.columns[-402:]]

Y.loc[4353]

X=data[data.columns[0:18]]
X

from sklearn import preprocessing
min_max_scaler = preprocessing.MinMaxScaler()
X_scale = min_max_scaler.fit_transform(X)
X_scale

from sklearn.model_selection import train_test_split

X_train, X_val_and_test, Y_train, Y_val_and_test = train_test_split(X_scale, Y, test_size=0.3)
X_val, X_test, Y_val, Y_test = train_test_split(X_val_and_test, Y_val_and_test, test_size=0.5)

Y_train

from sklearn.linear_model import LinearRegression
regressor=LinearRegression()
regressor.fit(X_train, Y_train)

from keras.models import Sequential
from keras.layers import Dense
def create():
  model = Sequential([   Dense(64, activation='relu', input_shape=(18,)),   
                        Dense(256, activation='relu'),  
                        Dense(512, activation='relu'),  
                        Dense(402, activation='sigmoid')])
  model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
  return model

model=create()

model.fit(X_train, Y_train,          
                 batch_size=32, epochs=100,         
                 validation_data=(X_val, Y_val))